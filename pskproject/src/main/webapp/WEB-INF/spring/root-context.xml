<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd">
	
	<!-- Root Context: defines shared resources visible to all other web components -->
	<!-- Database 연동을 위한 설정 파일 -->
   <!-- Root Context: defines shared resources visible to all other web components -->
   <!-- DB Connection (커넥션풀을 통해 얻음 아래쪽 bean 참조)-->
   <!-- DataSource -->
   <bean id="dataSource" class="org.springframework.jndi.JndiObjectFactoryBean">
      <property name="jndiName" value="java:comp/env/jdbc/Oracle11g" />
   </bean>
   
   <!-- Mybatis Setting -->
   <!-- SqlSessionFactory는 Database와의 연결과 SQL의 실행에 대한 모든 것을  가진 가장 중요한 객체이다.-->
   <!-- SqlSessionFactory를 생성해 주는 객체를 설정해 주어야 하는데 SqlSessionFactoryBean이라는 클래스이다. -->
   <!-- classpath: 은 web-inf의 classes파일 경로 설정 -->
   <bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
      <property name="dataSource" ref="dataSource" />
      <!-- mybatis 환경설정, 설정파일의 위치는 복수가 아니라 configLocation -->
      <property name="configLocation" value="classpath:config/mybatis-config.xml" />
      <!-- mapper 위치 실제 쿼리문을 가지고 있는 sql명령어, mapperxml-->
      <property name="mapperLocations" value="classpath:query/*.xml" />
   </bean>
   
   <bean id="sqlSession" class="org.mybatis.spring.SqlSessionTemplate" destroy-method="clearCache">
      <constructor-arg name="sqlSessionFactory" ref="sqlSessionFactory"/>
   </bean>
   
   <!-- a PlatformTransactionManager is still required -->
   <bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
      <property name="dataSource" ref="dataSource" />
   </bean>
   
   <bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
      <property name="basePackage" >
         <value>com.pension.**.**.dao</value>
      </property>
   </bean>
</beans>
